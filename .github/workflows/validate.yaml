name: Validate CSV Project Names

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "data/**/*.csv"

jobs:
  validate_csv:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python & uv
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync

      - name: Find modified CSV files
        id: find_csv
        shell: bash
        run: |
          # get newline-separated list, then turn into a space-separated one
          FILES=$(git diff --name-only origin/${{ github.base_ref }} | grep '\.csv$' || true)
          echo ">> raw list:"
          echo "$FILES"
          if [[ -n "$FILES" ]]; then
            FILES="${FILES//$'\n'/ }"
            echo "csv_files=$FILES" >> $GITHUB_OUTPUT
            echo "csv_found=true"   >> $GITHUB_OUTPUT
          else
            echo "csv_found=false"  >> $GITHUB_OUTPUT
          fi

      - name: Validate project names in CSV files
        if: steps.find_csv.outputs.csv_found == 'true'
        id: validate
        shell: bash
        run: |
          set +e
          CSV_LIST="${{ steps.find_csv.outputs.csv_files }}"
          echo ">> iterating over these files:"
          echo "$CSV_LIST"

          echo "# 🔍 CSV Validation Results" > validation_results.md
          INVALID=false
          TOTAL=0
          FAILS=0

          for file in $CSV_LIST; do
            (( TOTAL++ ))
            echo "🌱 Validating: $file"
            OUTPUT=$(uv run src/validate_csv.py "$file" 2>&1)
            echo "$OUTPUT"

            COUNT=$(echo "$OUTPUT" | grep -Eo 'Invalid projects: [0-9]+' | awk '{print $3}')
            if [[ "$COUNT" -gt 0 ]]; then
              INVALID=true
              (( FAILS++ ))
              {
                echo "## ❌ [$file]($file) FAILED"
                echo ""
                echo '```bash'
                echo "$OUTPUT"
                echo '```'
                echo ""
              } >> validation_results.md
            fi
          done

          if ! $INVALID; then
            echo "## ✅ All CSV Files Passed Validation" >> validation_results.md
          else
            echo "## ❌ $FAILS of $TOTAL files failed validation" >> validation_results.md
            exit 1
          fi

      - name: Comment on PR with validation results
        if: always() && steps.find_csv.outputs.csv_found == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = require('fs').readFileSync('validation_results.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner:        context.repo.owner,
              repo:         context.repo.repo,
              body,
            })
