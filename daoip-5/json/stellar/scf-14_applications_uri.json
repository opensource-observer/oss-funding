{
  "@context": "http://www.daostar.org/schemas",
  "name": "Stellar Community Fund",
  "type": "Foundation",
  "grantPools": [
    {
      "type": "GrantPool",
      "name": "SCF #14",
      "applications": [
        {
          "type": "GrantApplication",
          "id": "14-495",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "CashAbroad - CashAbroad",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "CashAbroad is the 1st smart platform to leverage the liquidity of B2B payments and family remittances to fund Public Goods. CashAbroad is a smart network that funds public goods using small fees from family remittances and B2B payments. These fees are used to fund community projects like schools, hospitals, and community centers in the remittance senders' towns. We believe this approach will make a significant impact on these communities. To achieve this, we are taking the following steps: We are using Soroban to enable a smart contract that will distribute a percentage fee to the public good, recipient, and CashAbroad wallets. This smart contract will distribute the money via on-chain transactions to Stellar wallets. We are integrating Circle to enable B2B ramp on and ramp off methods such as bank card transactions and wires. This will provide higher amounts for businesses with cross-border payments and enable KYC for businesses. We aim to enable these features for the countries of Canada, the US, and Mexico to start with. We are integrating Stellar Anchors to enable instant family remittance payments with a convenient fee. With this integration, we aim to leverage payments for Argentina and Peru to start. We are continuing the design and development of the B2B functionalities of automatic payments, dispersion (mass payments), roles and approvals, invoice/request, accounting imports, accounts and sub-accounts, approval triggers, WhatsApp shares, and status.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recrIwocQMrQbXS41",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/CashAbroadApp"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/cashabroad/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "110025.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "110025.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-496",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "Meru - Meru",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "USD Banking for Latin Americans over Stellar Blockchain We already have more than 10k registered users and more than 750K in transaction volume: Here is evidence of our transactions through these wallets that are owned by us and we used them to perform our internal operations: \n* https://stellar.expert/explorer/public/account/GDFVGIS3JBHN4HGKRIHE4XMS56DEOFEH6CXWCDNEALVDFVTO2S6OWQL5 \n* https://stellar.expert/explorer/public/account/GD2F5BNH5HSJSXXBBKM24UBMLPJEHAMBNXHVRRHSMA35XCKEMXVFPWZT \n\nThe main features we already have is USD Savings: In Latin America, it can be difficult to open a USD bank account, and the banks that do offer this service often require a high initial deposit. Meru solves this problem by allowing customers to deposit local currency, which is then used to mint USDc (USD coin) by Circle over the Stellar blockchain. Each user has their own Stellar wallet, so the USDc is deposited directly into their wallet. \n\nLow-cost International Money Transfers: Sending money between countries in Latin America can be difficult and expensive. Meru solves this problem by allowing customers to send money to more than 13 countries in the region. The app uses Stellar to send the payment from the user's wallet to Meru's treasury wallet. Meru then sends the money to the Stellar wallet of a partner company that handles liquidity in most of Latin America. This ensures fast and low-cost money transfers. \n\nEarn Up to 7% APY: Meru allows customers to earn up to 7% APY (annual percentage yield) on their investments. The app uses the yUSDC asset from UltraStellar to offer this feature. Customers can invest their money and earn interest without worrying about scams. \n\nPay Utility Bills: Meru allows customers to pay their utility bills using their USDc balance. The app partners with a third-party company to exchange the USDc for local currency using the Stellar DEX platform through a local market maker. \n\nWe are building a Payroll solution for companies to pay their employees in Latam using Meru platform and wallet using Stellar Payments. The idea is to implement it using Soroban when it is in Mainnet.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/reck9KKpu9MWkU3Bf",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "@getmeru"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/AJwxuhGY"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/88967421/admin/feed/posts/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "50000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "50000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-497",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "KometPay - KometPay",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "The app that helps Latino migrants to better deliver financial support to their families back home by sending money and vouchers. KometPay is a mobile app that helps Latino migrants support their families back home. Users can either choose to send USDC or redeemable vouchers. Recipients who receive USDC can either store them in their Komet wallet or transfer them to their bank accounts in their local currency. Those who receive a redeemable voucher can spend its value in the merchant. Our product addresses pain points for migrants in the US and recipients in Colombia.\n\nIn the US: Red tape: With KometPay, users can send money in three simple steps by simply selecting the recipient\u2019s phone number. No need to include unnecessary banking details. Exchange rates: With KometPay, senders don't need to worry about the exchange rate: they can send dollars and the recipient will receive dollars. Allocation of resources: Another concern for senders is how the money is spent. Through KometPay, they will be able to select a merchant (pharmacy, supermarket) and send a voucher that will only be redeemable in the selected merchant.\n\nIn Colombia: Dollar account: Our USDC wallet and voucher credit protects Colombians from the volatility of the Colombian peso. They can choose to spend all or a partial amount. Access: Colombia remains a cash-based economy with a largely unbanked population. Our partnership network ensures that everyone, regardless of access to banking tools, can withdraw their Komet balance.\n\nKometPay leverages Stellar at every step of our flow of funds: Through our integration with MoonPay, we ensure that the sending user can onramp USDC on Stellar. The USDC will be sent to a Komet wallet issued on the Stellar network, which will allow our Colombian users to store USDC or a USDC-backed voucher. When the Colombian user wants to off-ramp, either transferring to their local bank account, spending a voucher at a merchant or cashing out at a local partner, we will leverage Stellar's anchor network that will connect us to the dex and the local banking rails.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recuFZQfo6tloPz6e",
          "status": "funded",
          "socials": [
            {
              "platform": "Discord",
              "url": "kometpay"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/kometpay/?viewAsMember=true"
            }
          ],
          "fundsApproved": [
            {
              "amount": "35000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "35000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-498",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "Autify Network - Autify Network",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "Developing a revolutionary cross-border payment infrastructures & supply-chain management through the power of blockchain and AI Autify Network is developing revolutionary digital payment infrastructures (B2B cross-border payment, Setting up an Anchor, Launching an INRc stablecoin, P2P lending) and supply-chain platforms (Supply-chain management, supply-chain traceability, sustainable track and trace) through the power of blockchain and AI. We are addressing an extremely complex problem that affects companies worldwide, resulting in losses exceeding $5 trillion due to inefficiencies and a lack of transparency. We aim to tackle these issues by developing innovative solutions that improve efficiency, reduce losses, and enhance transparency for businesses and their customers globally.\n\nOur primary objective is to streamline B2B cross-border payments for businesses globally, making them more secure, cost-effective, and transparent. We plan to achieve this by integrating Stellar SEP-6, SEP-24 and SEP-31 APIs, as well as establishing Anchor services for fiat on/off ramps. Furthermore, we aim to develop a stablecoin (INRc) on the Stellar Network to further enhance the efficiency and stability of our payment platform. India is a significant player in global trade, with its trade volume steadily increasing over the years. According to the World Trade Organization, India's merchandise exports stood at US$317 billion in 2020.\n\nWe are building an end-to-end supply chain management platform for businesses to manage the flow of goods and services from the point of origin to the point of consumption. Our platform will provide real-time visibility into the movement of goods and enable businesses to quickly adapt to changes in demand or supply. They can also help reduce costs and improve efficiency by automating routine tasks and streamlining workflows. Also, we are developing a few other products like supply chain traceability, sustainability track and trace, vendor aggregator platform, API platform, P2P lending etc.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recTAiDefI9ZNxR9E",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/autifynetwork"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/autify-network/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "15000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "15000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-499",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "Smart Deploy - Smart Deploy",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "Deploy, manage and verify smart contracts easily on Soroban with our Contract Management DAO. We propose Smart Deploy, a platform to simplify the process of deploying and managing smart contracts on Soroban. Currently, Soroban lacks a standardized way of publishing, verifying, and upgrading contracts, including tracking and managing contract metadata. Smart Deploy solves these issues by creating a DAO for publishing contracts and offers a standardized interface for deploying, invoking, and upgrading them. Developers can publish contracts with Smart Deploy platform allowing its metadata to be tracked such as version and where to find the source code, e.g. Github repo. After publication, contracts can be deployed and claim a unique ID, which makes them easily accessible and human-readable. The platform also provides a standardized interface for invoking deployed contracts, making it easy to integrate them with other applications and services. Finally, Smart Deploy uses semantic versioning making it safe and easy to upgrade to the latest version using the DAO contract, ensuring that each decision is made as a team. Overall, Smart Deploy is a much-needed solution for developers for publishing, deploying, and managing smart contracts on Soroban. By providing a user-friendly interface, our platform will streamline and standardized the entire contract deployment process. This will allow developers to focus on building great applications instead of worrying about technical details and reinventing the wheel.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/rec3DmdhPUyEJWyWB",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/TenkDAO"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/WXBwmYy6uj"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/tenk-studio"
            }
          ],
          "fundsApproved": [
            {
              "amount": "75000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "75000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-500",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "Soroban Smart Option Contract - Soroban Smart Option Contract",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "Offers trade submission, collateral deposits, and settlement for an option with a Soroban smart contract. We are developing three components of our Soroban Option contract. A smart contract that receives deposits for option trades. This is analogous to an option purchaser depositing the premium and the seller depositing the maximum loss. An oracle smart contract that is fed with pricing information. Other contracts can query this contract as a source of truth. A service application that gathers pricing information from trustful sources and publishes them to the oracle smart contract. These contracts will be released as open-source projects on the GitHub platform. We plan on deploying them on FUTURENET during development. We hope these provide building blocks and examples for more, more sophisticated contracts.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recZCNsXQQM03va9Q",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://github.com/blocktimefinancial/option"
            },
            {
              "platform": "Discord",
              "url": "https://discord.com/channels/1039603107396603965/1039603108034129922"
            }
          ],
          "fundsApproved": [
            {
              "amount": "10000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "10000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-501",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "DYET (Do you even test?) - Soroban Assistant",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "AI fuzzer that finds bugs and vulnerabilities in your Soroban smart contracts. There have been a lot of bugs and vulnerabilities in smart contracts on other chains which led to significant losses. Having an automatic and easy way of testing or writing tests might give Soroban smart contracts an edge against the competition by minimizing losses in the ecosystem and community. We propose an AI fuzzer and test generation for Soroban smart contracts. It would be a model trained with reinforcement learning and its goal would be to cover every code block in the least amount of calls. Later, a detector and parser of the blockchain state would be needed to determine if the state is valid or not or if certain accounts received funds they weren't supposed to. We see many ways to explore this problem: aim for a model that covers most of the lines/blocks of code in the least possible number of calls, use the training process as fuzzing, and use user annotations and code parsers as an additional source of information for training and fuzzing. The most important information includes code branching and reading or writing to memory. \n\nUpdate: We've created a demo of a chatbot that can answer questions about Soroban documentation, generate code/tests, and audit contracts.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/rec0jGQZos0pFphvx",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "15000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "15000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-502",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "AssemblyScript Soroban SDK - AssemblyScript Soroban SDK",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "The AssemblyScript Soroban SDK is an open source SDK that supports writing contracts for Soroban by using AssemblyScript. I would like to extend the AssemblyScript Soroban SDK with more valuable features, tests, docs, and examples.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/rec2ypZv4xeGu177p",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "29600.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "29600.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-503",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "Stellar Dao Discord Bot - CommuniDAO",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "Our product aims to give discord communities the ability to create a DAO on stellar to facilitate community governance. Our goal is to create a Discord bot that simplifies interactions with Stellar and Soroban while preserving the security of the users' assets. Additionally, we aim to develop a web app that would allow server owners to deploy DAO contracts, issue community NFT assets, manage their Discord community, create proposals, vote on proposals, and perform other tasks that would enhance the functionality of their community. Currently, interacting with DAOs on Ethereum and other networks is quite expensive, which limits its practical functionality. However, this problem does not exist on Stellar, which provides greater functionality and can support more users. As a result, our approach involves creating a customizable web app that enables server integration and setup specifically for Stellar and Soroban. To accomplish this, we will be developing a smart contract based on Open Zeppelin's governance API, which will be customized to our specific needs. In order to facilitate interactions between the users and the DAO, we will be using a Discord bot. Admins will be required to hold a certain asset in their account, and users will be issued assets that can be used to moderate the server, and interact with the DAO to vote on proposals. This will enable members to participate in the decision-making process. We will also be developing a web app to aid managers in interacting with the smart contract, issuing assets, and performing other moderation tasks. The administration UI will be accessible only to admins who have verified their Stellar account. With this, they will be able to add or remove other admins, create or remove roles, and define role requirements. On the other hand, users will be able to read, create, and vote on proposals, such as voting on new members and budgets. Overall, our aim is to create a platform that is secure and user-friendly, with the goal of onboarding thousands of new users to Stellar by creating easy tooling for Discord communities to serve their users.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recTGMVa9Utt1JQg5",
          "status": "funded",
          "socials": [
            {
              "platform": "Discord",
              "url": "https://discord.gg/trppmYjVJJ"
            }
          ],
          "fundsApproved": [
            {
              "amount": "74000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "74000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-504",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "Stellar Flow - Planet Pay",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "No-code/Low-code platform to build workflows on Stellar Stellar Flow is a no-code/low-code visual workflow automation tool for Stellar. Users can choose between Open Source (self-hosted) and Subscription-based (fully managed).\n\nThe problem: A simple business concept for a remittance product is quite simple: Onramp USDC using Moonpay, create a custodial account, exchange to ARS, and offramp using Anclap. To achieve this, a developer must understand the particularities of the network: An account must be created, and perhaps it has a signer added to it for security purposes. A trustline to the USDC asset must be created. The asset must be exchanged to ARS (Payments, DEX, Liquidity Pools). Understanding of the various SEPs to withdraw. Early-stage startups trying to build on the Stellar network face talent shortage at an adequate price; when developers that aren't familiarised with the Stellar network take on one of these projects, the time to market is increased due to the steep learning curve.\n\nThe solution: Intended to be used by early-stage startups and developers, Flow offers pre-built building blocks with best practices in mind and is built on the shoulders of battle-tested workflow tools such as n8n.io (https://docs.n8n.io/embed/white-labelling/).\n\nHow it works: Similar to Pipedream, n8n or Zapier; Developers need to drag & drop blocks that represent each of the steps of a workflow, and complete the relevant information in each step. One account can have unlimited workflows created. Stellar Flow will provide drag & drop building blocks to create accounts, make payments, connect anchors, execute Soroban smart contracts, and much more.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/rec6OemBgG8xOkFk1",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "48773.28",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "48773.28",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-505",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "Soroban Learn - Soroban Learn",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "Soroban Learn is an interactive learning platform using a in-browser coding experience My product eliminates the need for local setup trouble for new users to get their \"feet wet\". I believe this will lower the barrier of entry for new developers who are discovering Stellar/Soroban and Web3 as a whole. While this could eventually turn into a full-fledged tool for building Soroban contracts in the browser, my initial intent is to build basic \"hello world\" style exercises to show what Soroban is all about.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recQJLUR6hmcS5vqh",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "36000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "36000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "14-506",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 14,
          "grantPoolName": "SCF #14",
          "projectsURI": "",
          "projectName": "An Efficient Scaling Mechanism for Lattice-based Post-quantum Signatures - BTQ",
          "createdAt": "2023-04-09T00:00:00",
          "projectDescription": "Offers a scaling solution to improve transaction verification speed and cost savings by leveraging zero-knowledge proofs. The general principle of this project is to explore the possibility of replacing pre-quantum digital signatures, which are vulnerable to attacks by quantum computers, with post-quantum digital signatures. These signatures are designed to be resistant to quantum attacks and could provide a more secure foundation for Stellar in the future.\n\nImplementing post-quantum cryptography in blockchains has several downstream consequences. Signature sizes associated with the standardized post-quantum digital signature algorithms are much larger than the signatures used in blockchains today. Even with the smallest NIST post-quantum digital signatures, public-keys and digital signatures would consume at least 21x and 24x larger than the signatures used in Bitcoin and Ethereum, respectively. Since every blockchain transaction needs to be signed with a digital signature, each transaction will occupy more space within a block. This means that there will be fewer transactions per block, which results in slower transaction speeds for users and higher gas fees to include their transactions into the highly competitive block. By implementing post-quantum cryptography in blockchains, we are effectively unscaling our blockchains.\n\nOur service is designed to aggregate the post-quantum digital signatures associated with multiple transactions in a block. This will allow the Stellar blockchain to reduce the overhead cost of storing one post-quantum digital signature per transaction, thereby significantly reducing the size of each block. This technique preserves the structure of all existing transaction data and simply replaces the digital signatures associated with each transaction with a single aggregate signature. The output of this project will be a publicly accessible paper summarizing the research outcomes.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/rec8aXet5GgcZpRYc",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "10000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "10000.00",
          "payoutAddress": {},
          "payouts": []
        }
      ]
    }
  ]
}