{
  "@context": "http://www.daostar.org/schemas",
  "name": "Stellar Community Fund",
  "type": "Foundation",
  "grantPools": [
    {
      "type": "GrantPool",
      "name": "SCF #16",
      "applications": [
        {
          "type": "GrantApplication",
          "id": "16-463",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Tracee - Tracee",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "A user-friendly payment solution to help NGOs disburse aid instantly, safely & transparently to the underserved in the MENA region It's time to pay back to our communities. Tracee promotes financial inclusion in MENA and empowers humanitarian organizations and businesses through innovative and user-friendly cross-border payment solutions. Tracee fulfills the day-to-day needs of organizations and individuals in a region with high potential, but lacking serious and efficient payment solutions (34% of 500 million owns credit/debit cards).\n\nHow? Smart wallet: To create a seamless UI/UX, Tracee removes the need for private keys and seed phrases while still enabling users to maintain custody of their funds. With just a phone number, millions of users can access a digital wallet. To achieve this, we use SEP30, a user-friendly key management protocol (link here).\n\nBulk payments & Stellar Aid Assist (SAA): Aid delivery and bulk payments can be costly and very slow for NGOs, especially during emergencies. Last-mile cash-aid delivery poses safety risks for transporters and collectors and is susceptible to fraud. NGO operators and recipients often lack knowledge of operating in the web3 space. Solution: We provide a user-friendly interface to easily on-board thousands of NGOs and millions of recipients (individuals in need & employees). We scale SAA to allow orgs to send bulk payments and recipients to withdraw cash at any MoneyGram location.\n\nPayment streams using Soroban: Tracee simplifies the process of recurrent bulk payments and payrolls for NGOs by deploying Soroban to automate the process. This involves setting payment conditions, such as multi-sig and recurrence intervals, then the payment is executed by smart contracts in accordance with the conditions. Check out in product viz the detailed sequence diagrams.\n\nSmart contract escrow-service using Soroban: Tracee uses Soroban as an escrow service to hold funds for service payments. The sender fills the provider & the service details as well as payment terms, which are confirmed by the provider. Smart contracts hold the funds and release them based on the agreed terms. See the sequence of events in product viz.\n\nOn-ramp / Off-ramp solutions: SEP06 is used for deposit and withdrawal API/SDK, without leaving the app. Tempo is considered for credit cards and SEPA transfers. SEP24 is employed for hosted deposit & withdrawal with MoneyGram.\n\nStellar network: We use Horizon SDK to connect with Stellar network as well as several SEPs: SEP-10 for authentication of users, SEP-12 for communicating user KYC information, SEP-30 for private key management, SEP-31 for processing cross-border payments.\n\nUI/UX: Click here to test the prototype.\n\nKYB: Partnering with tier-solution provider, mainly Sumsub.\n\nKYC: It is made through via off-ramp partner.\n\nThe project architecture is illustrated below & describing the communication between the front-end, the back-end, Stellar & anchors. The use-cases of Soroban are considered upon the release it on the main net, more info about its implementation is in the \"product viz below\" and in \"Additional info\".",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recMi36KGHYwtBcZl",
          "status": "funded",
          "socials": [
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/traceeapp"
            }
          ],
          "fundsApproved": [
            {
              "amount": "128925.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "128925.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-464",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Unalivio Stablecoin payouts - Unalivio",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Unalivio is a payments method that allows migrants to pay families\u2019 bills from abroad with stablecoins, increasing sales for SMEs We will be building the \u201cUnalivio earnings payout system (UEPAS) for USDC on Stellar\u201d; in short the UEPA is the method in which small and medium businesses will be paid in USDC for the goods and services provided to end users with migrant families (example: Venezuelan migrants). The system resembles a bill payout system except: The person paying the bill and the person receiving the bill are in different countries; At the moment of settlement the merchant gets paid in USDC, on soroban, via a smart contract that automates and controls payments. This system solves problems for the three key stakeholders in our cross-border-payment scheme: Migrant abroad: Is able to pay for their family\u2019s needs back home, and doesn't have to pay an enormous fee for the cross-border txn. Also knows their money is going where it needs to go (the SME business). Family back home: Their bills are paid by their migrant family members abroad. Small business: Improves income as they received extra sales, paid in USDC, a dollar backed stablecoin which also is used to store value giving the business more flexibility in inflationary countries. The Soroban component works as part of our payments architecture: The process starts with a business registry, displaying a range of clinics, and products from within those clinics. We start with hospitals & pharmacies then expand into other services. Next step is the payment, which happens through integration with a cash-in gateway, and crypto conversion (Moonpay or more efficient solution). The ecosystem is managed in an internal admin panel, similar to an \"Uber for drivers\" where caregivers (clinics) sign in and provide the needed KYB to be accepted into our marketplace. Initial sign ups will be handled with a Business development team, where the Unalivio BD team, vets, and signs up more clinics, labs and care providers. After having the cash in system and service ecosystem ready, we deploy the smart contract on Soroban: 1) Soroban\u2019s contract will serve as a part of the back end infrastructure to automate payments, eliminate human error in crypto addresses input, & minimize the need for trusts of administrators when input amounts. In short, the Soroban contract works as an automated, transparent treasurer. 2) Recipient's Stellar wallet(s) are registered including services, costs, and payment amounts for a payment to be triggered for their services. 3) Once a threshold is reached, the smart contract is triggered, and a payment is made to the defined wallet. This allows for automation and serves for a trustless, efficient, accurate, automated way to perform payouts and settlement, while combining the benefits of low cost transactions that are transparent, enabling improved KYC possibilities for all parties involved. 4) Once per cycle, an administrative report is created, and can be confirmed with the smart contract for added transparency and external audits for administrative, KYC and other purposes.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recf9SxVKM35hZWQj",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://x.com/somosunalivio"
            }
          ],
          "fundsApproved": [
            {
              "amount": "82390.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "82390.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-465",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Dogstar - Dogstar",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Dogstar is a DeFi play & learn platform that gamifies your crypto experience The Dogstar platform is a gamified DeFi interface built on Stellar that aims to onboard the next waves of users into the ecosystem. Home of the Dogstar League, feel free to check out the progress so far here.\n\nThe features to come:\n- Portfolio, info about assets and positions of the address wallet connected\n- Web wallet, allowing user to interact with web app using smartphone\n- Terry info, popup explanations about main DeFi concepts\n- All responsive\n\nThe development of the Dogstar League includes:\n- Game integrations of swap, trade and LP\n- Game Rules & description\n- Welcome \"Join\" & wallet game\n- Game profile\n- Game leaderboard\n- Game Payments tool to send tokens to stellar accounts\n\nOur progress so far:\nThe current web3 app in production includes the following features:\n- AMM tool to execute swaps between pairs in the stellar AMM\n- LP, tool to provide liquidity on stellar liquidity pools\n- Trade, tool to trade the order book market of the SDEX\n- Integration with three browser wallets: Freighter, Rabet, Xbull\n- An astonishing design carefully curated!\n- A Soroban Auction smart contract to get sponsors for the Dogstar League\n\nThe technological stack we\u2019ve used to build the platform is:\n- React js with redux toolkit as state management library\n- Code written in Typescript following solid principles and best practice to achieve clean code\n- Stellar sdk to interact with Stellar\u2019s blockchain\n- React charts as charts library\n- Tailwind as css framework\n- Serverless framework to manage dynamodb and lambda function on AWS cloud services\n\nAs an infrastructure we have been using:\n- AWS cloudfront as CDN\n- Github actions as CD/CI platform is used to automate build, test and development pipeline\n- We organize code in git following feature branch convention.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recmn1pHr7N7jqA9D",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/dogstarcoin"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/wtA4hnDp2j"
            }
          ],
          "fundsApproved": [
            {
              "amount": "78957.50",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "78957.50",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-466",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Paychant - Paychant",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Paychant is a payment gateway that helps Africans on/off-ramp right inside any crypto-enabled product using local payment options. Paychant is developing a standard fiat on-and-off ramp solution that supports all of Africa's traditional payment rails. The Problem: As of today, it\u2019s challenging for users in Africa to onramp and offramp directly on any self-custodial wallets or dApps using their local payment methods like mobile money wallet, USSD, or local bank transfer, because most of the global fiat on-ramping solutions mainly focus on ACH, SEPA, and credit card payments solution and none of them support the traditional payment rails in Africa. Solution: Paychant solves this problem by providing a simple and customizable fiat on-and-off-ramp SDK that supports a broad range of localized payment methods in Africa, which are mobile money wallet, USSD, or local bank transfer, allowing users in Africa to easily on-ramp and off-ramp right inside any self-custodial wallets, DEX, dApps, or NFT platforms. What we want to build on Stellar: Through our ramp SDK, we want to connect XLM and USD Coin (Stellar) to all of Africa's traditional payment rails, allowing African users to seamlessly on-ramp and off-ramp directly on all self-custodial wallets, DEX, or dApps that are built on Stellar.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recu3dRuCQUZY1U4Y",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/paychant"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/YUXPAJfZaN"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/paychant/?viewAsMember=true"
            }
          ],
          "fundsApproved": [
            {
              "amount": "50000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "50000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-467",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Mica - Mica",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Mica simplifies renting by underwriting tenants' risk and equipping them with financial tools. Due to the lack of escrow solutions, the majority of real estate transactions are done on goodwill and are therefore exposed to fraud or abuse. Our project seeks to address this problem by creating a secure and reliable decentralized escrow solution that can be used to protect security deposits and later also be applied for buying properties. Our solution will enable renters to place their deposits in a secure, decentralized escrow account that cannot be tampered with. By using Soroban's unique capabilities, we can create a transparent and efficient system that will provide peace of mind to both renters and landlords. With the support of the Stellar Community Fund, we will be able to accelerate the development and launch of our escrow solution on the Soroban blockchain. We believe that our project will make a significant impact in the real estate sector in LatAm, and we are excited to bring it to market.\n\nThe technical user flow will be: Using Soroban SDK we will build and deploy an escrow smart contract to act as an intermediary between tenants and landlords on a MicroService that will be created and consumed from our platform. We will build and deploy first on the testnet, of course, initially, it will receive the damages schema (agreed by both landlord and tenant). The smart contract will have methods to receive and lock the money, finalize and unlock the money, receive updates regarding the possible damages to the property, and use the storage to update it once the rent contract is finished. This Smart Contract will be used for all the rent contracts so it will never be invalidated. When a rent contract is signed, the tenant and landlord agree on the percentages to be deducted for each type of repair, and an instance of the Smart Contract will be signed by both users and with Mica as an intermediate. That Smart Contract instance will be provided with the same Id from our database and with the damage type and percentage defined and agreed upon. Both Landlord and Tenant will sign the token through us. A custodial wallet will be used for this purpose. We will be receiving the payment and moving it from FIAT to USDC using an anchor (we are having conversations with Bitso). The Smart Contract instance will execute the method to lock the money, which will receive the contract duration and deposit amount, and the security deposit will be locked. We would like to explore the possibility of Stellar products or programs where we could invest the USDC for the whole rental period generating profits for the tenant, landlord, and Mica. The Smart Contract method to update itself with the possible damages will be executed 15 days prior to the rental contract ending with the data of the inspection and evidence of the damage provided and define how much of the deposit will each part receive. Once the rent ends, based on data provided from the previous step, the money will be unlocked and returned via anchor and split as per defined by the Smart Contract rules.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recdcC4akBWPOdMsS",
          "status": "funded",
          "socials": [
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/micarent/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "138700.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "138700.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-468",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Infinity Wallet - Infinity Wallet",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "The 1st desktop wallet providing a one-stop solution for payments & seamless use of DeFi with Web3 browser for easy access to Web3 Infinity Wallet is the first non-browser-extension, all-in-one non-custodial multi-chain wallet ecosystem (\u201cA wallet super App\u201d) and Web3 Browser of its kind on desktop. Providing a one-stop solution for seamless usability of DeFi, NFTs and easy cross-border payments, along with a gateway to the entire Web3/DApp space directly within the first Web3 browser and DApp store. Redefining the wallet, DeFi and Web3 experience to fulfill all a user's needs in a single platform, while removing the complexities of decentralized finance and Web3, enabling economic freedom for everyone globally! From day one, we have focused on enhancing and providing the best possible user experience and lowering the barrier to entry, to allow for streamlined and secure adoption of DeFi and Web3. Providing a world-class user experience with a seamless user interface, and a full spectrum of constantly growing in-wallet features and services as a one-stop hub, delivering a more curated and complete in-wallet experience. Making Infinity Wallet the complete solution for all crypto users\u2019 needs, while making adoption and usage of cross-border payments, DeFi, NFTs and Web3 easier than ever before. Infinity Wallet is not just a unique one-stop wallet built for the masses, but it is also the first desktop platform to provide users with access to the entire Web3 and DApp space without needing to leave their wallet, with the first Web3 browser and DApp store on desktop as a standalone App. Finally removing the need to use unintuitive, unfriendly and feature-lacking browser extension wallets ever again! Providing a far superior, safer and more natural user experience, with a range of unique advantages for users, DApps, and chains alike, while enabling easier usage and adoption. Problem/Solution, How it works with Stellar & Developments: Due to lack of space on this form to explain everything in detail, we have created a google doc which explains all the information requested: https://tinyurl.com/ybvxy3fx",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/rec19YyUKPo2XVINi",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/InfinityWallet"
            },
            {
              "platform": "Discord",
              "url": "https://discordapp.com/invite/SgNjKzF"
            }
          ],
          "fundsApproved": [
            {
              "amount": "130000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "130000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-469",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Stellar/Soroban Public RPC infrastructure from Gateway.fm - Gateway.fm",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Offering Soroban mainnet/testnet RPC infra on private data centers with monthly rate limit of 155M requests, free of charge. Free Public RPC infrastructure (Mainnet and Testnet) on independent/carbon-neutral data centers for Stellar/Soroban. RPCs are vital tools that enable the building of decentralized apps and projects. With our Free Public RPC infrastructure, developers can effortlessly execute smart contracts and build dApps on the Stellar/Soroban network. Gateway.fm\u2019s fully portable infrastructure can be deployed on bare metal/private data centers in any country (if needed). That will facilitate the development of digital currencies (CBDC) based on Stellar/Soroban Network. Our infrastructure simplifies the building process and eliminates the single point of failure, resulting in a more robust and decentralized network. We are excited to offer this service to the blockchain development community and to contribute to the growth and advancement of the Stellar/Soroban blockchain.\n\nFeatures:\nMainnet and testnet public (Free) PRC endpoints (Rate limit: 155M requests per month for both mainnet and testnet per IP)\nShared nodes and Dedicated nodes for enterprise clients\nOn prem or private cloud\nAuto-scaling\nFully automated/monitored\nSmart Proxy/ LB / Aggregator\nDeep Analytics\nBest in Class dedicated technical support (8-18CET) + 24/7 on pager duty for critical issues\nSLA 99.9%\n\nBusiness Model:\nFree RPC for Stellar developers and community up to 155M requests per month (or 60RPS)\nPaid Shared nodes ($0.0000015/request) or dedicated nodes for enterprises customers (2 nodes \u00b1$1k)\n\nSuccess cases and validation from the partners:\nErigon. Gateway.fm worked closely with the Erigon team on optimizing the TX pool and finishing the Withdrawals API. Some of our team members attended the Shanghai upgrade R&D workshop in January. Extended partnership for one more year.\nPolygon zkEVM. Gateway.fm was the first one to go live with Polygon zkEVM Public RPC endpoints (6min or 120 blocks after the first transaction). More information: https://twitter.com/0xPolygon/status/1641158631197495296\nPolygon Supernet. Gateway.fm has been chosen as an official implementation partner of Polygon Supernet. More information here: https://twitter.com/gateway_eth/status/1646132929087561728\nGnosis Chain. Gateway.fm runs 75% of public Gnosis RPC, and 50% of validators. More information here: https://forum.gnosis.io/t/gip-70-should-gnosisdao-pass-a-grant-proposal-to-partner-with-gateway-fm/6079\nYAT. Gateway.fm provided a complete solution for a game project, including advising on user journey methodology, smart-contract execution, mechanics, and auditing on both Ethereum and Polygon. The project started in November 2021 and was successfully completed in March 2022.\nLUKSO (blockchain Created by former Ethereum Developer Fabian Vogelsteller, known for developing ERC20 and ERC725, web3.js, and the Mist Browser). Gateway.fm has been chosen as an infrastructure partner to provide Public RPC services mainnet and testnet. Work in progress. ETA: June.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recw85qJRueeg4l6d",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/gateway_eth"
            }
          ],
          "fundsApproved": [
            {
              "amount": "150000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "150000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-470",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Band Protocol Oracle Solution - Band Protocol",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Band Protocol is a cross-chain data oracle platform that aggregates and connects real-world data and APIs to smart contracts. Band Protocol is a leading cross-chain data oracle provider that aggregates and connects real-world data and APIs to smart contracts. In addition to our flagship oracle product and network, we\u2019ve just launched a verifiable random function (VRF), which allows smart contracts to securely generate a random value and provide proof. BandChain is based on Cosmos SDK, designed to be compatible with all smart contract platforms and blockchain development frameworks. In a trustless and decentralized manner, BandChain does all the heavy lifting jobs of pulling data from external sources, aggregating, and packaging them into a format that is easy to use and cryptographically verified across multiple blockchains. Unlike general-purpose blockchains, BandChain is designed explicitly for oracle data requests and computation. Data request transactions are both received and resolved very quickly, with an average block time of 3 seconds. We currently provide cryptocurrencies, foreign exchange rates, and commodity prices on 19 chains, including Ethereum, BNB Chain, Avalanche, Cronos, and we've also integrated with multiple projects on their testnets. Band Protocol works with different chains and Defi apps like lending protocols, perpetual protocols, and yield protocols to feed them accurate real-world data. Furthermore, our data source scripts and oracle scripts allow maximum customization and flexibility for the user to query and compute their desired data feed. As for our VRF, randomness is a fundamental function that helps to operate many decentralized applications (dApps). However, the root and foundation of this vital randomness mechanism are often neglected. Band\u2019s VRF service addresses the fundamental issues that threaten the integrity of various Web3 use cases by providing a pseudorandom output along with proof of authenticity that validates the random number generation process. Four main features of our VRF include unpredictability, unbiased, verifiable, and tamper-proof.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recItGzRXb0jGGtzx",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://x.com/BandProtocol?s=20"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/qDcEsjCj"
            }
          ],
          "fundsApproved": [
            {
              "amount": "60000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "60000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-471",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "SorobanPulse - SorobanPulse",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "SorobanPulse tracks the Soroban's ecosystem activity on GitHub and highlights the open-source projects built on the platform. The Soroban's open source developer ecosystem is growing with rapidness and as a result, the ecosystem contributions get scattered all over GitHub. This makes it difficult to track the development activity on Soroban and to find & use the existent open-source code, that can serve as inspiration for developers. For this reason, CrossChain Labs proposes SorobanPulse project, that monitors the development activity in the Soroban\u2019s ecosystem, presenting the growth data, with a particular focus on helping developers track and easily access the open-source projects built on Soroban platform. SorobanPulse will gather information about projects, developers, and their contributions on GitHub. The easy to use and interactive dashboard will enable users to compare different projects and use the most active ones as valuable examples to assist them in constructing their own projects. Our future plan is to compete with Electric Capital (https://www.developerreport.com/) and present comprehensive data on open-source developers' activity, along with financial information sourced from CoinMarketCap. This data will be automatically refreshed on a daily basis, ensuring up-to-date insights. The project will help the business development members, investors and also developers themselves as it offers the ability to compare various projects and leverage the most active ones as valuable references for guiding their own project development.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/reccKirUoWW2ux0Le",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "41000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "41000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-472",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Lightecho Stellar Oracle - Lightecho Stellar Oracle",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Reliable and Trustworthy Emerging markets and XLM Volatility price feed for Soroban. Price Oracles serve as an essential element in the next-generation Stellar Soroban smart contract system, which leverages the Rust programming language. They are widely applied in lending schemes that incorporate approaches like overcollateralized loans. Decentralized systems require a secure and reliable way to access external data, especially when it comes to financial data that impacts decision-making within the applications. Since blockchain networks are typically isolated from the outside world, price oracles act as a bridge between off-chain data and on-chain applications, ensuring accurate and trustworthy information for users and developers. Major oracle disruptions could endanger billions of dollars stored in Soroban-based agreements. Recognizing the focused risks is crucial, as the ever-expanding assortment of projects within the system typically hinges on a few price oracles. A breakdown in even one of these oracles might trigger a catastrophic ripple effect throughout the entire ecosystem. As a result, the seamless integration of dependable and secure price oracles is crucial for the success of Stellar Soroban.\n\nWe previously developed LightEcho.io, an aggregator that compiles pricing data from various sources, including Decentralized Exchanges (DEXs), Centralized Exchanges (CEXs), Instant Exchanges (ICE), and Peer-to-Peer (P2P) exchanges. It collects data from over 50 sources. This platform showcases Stellar pricing information. For this project, we aim to create two distinct types of oracle contracts within the Stellar Soroban ecosystem: An embedded oracle, in which all prices are stored inside the contract data on-chain, and the prices can be obtained at any time by invoking the contract function directly from another contract. A callback-based oracle, in which a price is requested alongside a contract ID for receiving the price later, then a backend aggregator (off-chain) detects the request via getEvents, and invokes the receiver contract, passing the price as a parameter to the function being invoked. The sources of the prices that are fed into those contracts will be decentralized, meaning there will be multiple sources, each one controlled by a different trusted market data providing company or exchange. It's on the consumer (of the contracts) to decide which price source to rely on when retrieving a price. For the centralized pricing systems we will both investigate using the pricing model from CME and use a hybrid model taking the best of Maker Dao and Cornell University's \"Town Crier\" model.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recLl0Y8hNXWZttmc",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/lightechoi/"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/bpventures/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "93110.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "93110.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-473",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Stellar Explorer - Steepx Stellar Explorer",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Soroban / latest protocol support and stack upgrade Adding support for soroban to Stellar Explorer (steexp.com) as well as support for latest protocol upgrades - new operations, effects, etc., streamline the format of it without changing any content by removing any html tags if they're there, adjusting the sentence breaks to look normal (remove any unnecessary breaks), and removing any unnecessary titles like \"Project Overview\".",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recZKQqHZYKuHG5Ib",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "11500.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "11500.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-474",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "DID:STELLAR - DID:STELLAR",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "DID:STELLAR implements self-sovereign identity layer in Soroban for the Stellar Network based on the W3C DID Core Specification. DID:STELLAR project will create a Stellar native self-sovereign decentralized and interoperable identity capability based on the W3C DID Core specification (https://www.w3.org/TR/did-core/). Decentralized identity enables a trustless, portable, self-sovereign identity that removes reliance on centralized entities for authentication, authorization, user data and KYC/KYB.\n\nDecentralized identity has a multitude of potential use cases, including Universal logins, KYC/KYB, Voting, Proof of human (sybil protection), Lack of ID problems exploited by human trafficking and forced labour, Product provenance. DID is not a new concept, and virtually all leading blockchain platforms have implementations of the DID standard. An interoperable and portable decentralized identity implementation is one of the public goods that support effective decentralization in a privacy-preserving way while enabling interaction with advanced use cases that require some user authentication. DIDs have seen adoption across end-user identity, organization identity and supply chain identity use cases. DID is an open and interoperable standard that is garnering adoption from both the public decentralized platforms as well as centralized entities (major financial institutions, multi-national oil and gas operators, U.S. government). The DID:STELLAR project will implement the DID spec in general, similar to the way DID:ETHR project implements DID on the Ethereum Blockchain. More specifically, as part of this grant we will implement the following DID infrastructure: A DID:STELLAR Method, DID method resolver, Management of the DID Document using the smart contract including Delegation, decoupling claims data from the underlying stellar address and support for existing stellar multisig capabilities, Integration with the Universal DID Resolver.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recxXHFIFQhxfnIVp",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "Mavennet_"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/mavennet"
            }
          ],
          "fundsApproved": [
            {
              "amount": "117100.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "117100.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-475",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "SStream - SStream",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Composable streaming payments on Soroban. Streaming payments allow users to send funds to a recipient, such that a portion of the amount sent is claimable every `x` seconds/hours/days. This type of protocol is useful in many situations, such as a DAO giving out grants. In this case, the DAO can give the grant out as a streaming payment and can cancel the stream when the recipients are not making progress. The protocol will be composable and allow others or me to easily add extra functionality. For example, I am planning to make it possible to use a portion of the stream to invest in other tokens periodically.\n\nFeatures I am currently planning these features:\n- Basic functionality: Users can create streams and recipients can withdraw from streams by using a web app.\n- Top-up streams: The creator of a stream can add additional funds to the stream.\n- Transferrable streams: Streams will be represented as tokens, which will allow the recipient of a stream to transfer a portion of the stream to someone else. Representing the stream as tokens could also be useful in other ways, such as allowing wallets to notify a user when a stream was canceled.\n- Infinite Streams: Streams can have no end date. This allows for some interesting applications, such as streaming funds to a DEX where the funds are then exchanged.\n- Partial conversion to other tokens: Recipients will be able to invest a portion of their stream into other tokens. Funds will periodically be withdrawn and invested. This feature will charge a fee.\n\nUse cases:\n- Grants: Organizations can use SStream to pay out grants. A cancellable stream can be created per grant. The organization can cancel the stream if the grant recipient is not fulfilling their obligations.\n- Salaries: Imagine receiving a portion of your salary every second.\n- Subscriptions: Imagine subscribing to a service where you pay per second and can cancel at any time.\n- Daily cost average buys: SStream can be used to DCA by creating a stream that periodically converts funds into other tokens.\n\nChallenges: I want the system to be composable. However, this means that the system has to work in many different scenarios and that I will have to consider many different factors. For example, someone can send some of their stream tokens to another user and the other user can keep claiming before the first user is able to. In this way, they are doing a sort of denial of service attack. I will offer services that will rely on keepers. I need to determine the frequency that the keeper calls the contract, such that it is frequent enough to be useful but keeps costs low. I may have to rethink some parts of the system depending on how high the gas fees end up being.\n\nArchitecture: The system will consist of a core contract that handles the stream behaviors and another contract that handles integrations with other contracts. A backend will keep track of users' streams and a Keeper will be responsible for periodic token exchange. The diagram gives a nice view of the architecture.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recnfJhEt3t2QogUI",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "36000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "36000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-476",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "CommuniDAO - The Stellar Discord Dao Bot - CommuniDAO",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "We are building a DAO community management bot using Stellar, Soroban and Discord Following the first stage of our project, it became evident that the redeployment of the bot posed a significant challenge, necessitating a high degree of technical expertise for effective customization and deployment across unique community environments. To counter this, we've initiated the development of a server owner signup and bot deployment feature for our web application. We have also constructed prototype smart contracts designed to deliver the functionalities we envision once Soroban is fully integrated into the Stellar mainnet. Although member voting capabilities aren't functional on the mainnet until Soroban's activation, we are in the process of conducting tests on futurenet. Our team has developed a prototype user interface for effective interaction with these smart contracts. Our goal is to further integrate Soroban functionality into our Stellar wallet client, a move that will empower Dapp developers with easy access to contract invocation, token deployment, token wrapping, and more. In terms of augmenting the bot's functionality, we will be introducing inter-server operability. This feature will enable users registered on one server to automatically receive eligible linked roles on other servers where the bot is deployed, streamlining user experience and fostering community integration across servers. By the end of stage 2, our objective is to deliver a fully functional DAO bot that any Discord community can utilize to deploy a DAO, either using their existing assets or employing the bot's built-in badge and role creation functionality to deploy new assets to the Stellar network. Our top goals for stage 2 include: The addition of a 'new community signup' feature, offering both free and premium features. This will not only create a revenue stream for the bot's hosting and maintenance costs but also empower communities to deploy their own Discord applications. Our application will host these for them, providing the required functionality. Importantly, deployment will not necessitate developer skills, and will allow white-labeling the UI for each server. The development of an open database of communities, to allow anyone to learn about a DAO, and view their governance history, as well as participate in governance if they are a member. The introduction of inter-server operability, eliminating the need for users to link their Stellar accounts multiple times. The development of advanced tooling functionalities, such as ledger data caching for quick accessibility and verifications. The provision of multiple options for DAO contract deployment to accommodate a variety of requirements. This includes classic asset adapters using Stellar Asset Contracts or Soroban-only tokens, alternative voting methods supporting a single token for DAO management instead of NFT badges and roles, new proposal creation methods allowing proposals to be highly customizable by their creators.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recxH0eXulsk9NUBp",
          "status": "funded",
          "socials": [
            {
              "platform": "Discord",
              "url": "https://discord.gg/trppmYjVJJ"
            }
          ],
          "fundsApproved": [
            {
              "amount": "69600.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "69600.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-477",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Pactta API - Pactta API",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "We enhance the anchor interoperability to provide a single API that enables any fintech in LatAm to offer seamless money transfers 1. Stellar SEP6 enabled anchor crypto on/off ramps: Allows users to easily convert their traditional currency or assets into cryptocurrencies such as USDC that can later be used on the Stellar network. Building SEP6 enabled anchors gives Pactta a full perspective of the whole Stellar infrastructure technology and allows us to provide the most competitive fees in the market. This also addresses the lack of operating ramps in LatAm to exchange local currencies into USDC and back for retail customers.\n\n2. Cross-border payment API: A tool designed for any businesses in LatAm to easily and securely provide cross-border payments to its users. Pactta's API orchestrates and connects two of the many crypto on/off ramps (either owned by Pactta or some of its partners) to send and receive borderless payments using USDC on Stellar as a non-custodial conversion mechanism. Our API takes care of all KYC requirements on both anchors and offers competitive exchange rates. Pactta accepts different payment methods and supports local currencies in LatAm such as ARS, CLP, COP, PEN, MXN, and BRL. Pactta is the layer that many non-crypto fintechs need in order to be able to access the cross-border payment technology of Stellar, without needing to understand blockchain, SEPs, or protocols.\n\n3. Fiat to fiat widget: A white label, easy to integrate, and user-friendly tool that enables our customers to offer fiat to fiat conversion quickly using our embeddable interface. This widget provides real-time exchange rates for the different fiat currencies, the payment methods available, and the KYC requirements. This way our customers can start generating a new source of revenue within their platform, eliminating the need for their users to cash out their wallets and use third-party services or navigate complex currency conversion processes.\n\n4. Business dashboard: This panel helps our customers manage payment statuses, download reports, and visualize financial data, all in one place. It provides real-time insights and analytics on performance, and also customization of widget and fees. With Pactta's dashboard, businesses can optimize their operations and streamline their cross-border payment offering.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recwe0UWBi0QuT5SH",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/intent/follow?screen_name=paychant"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/paychant/?viewAsMember=true"
            }
          ],
          "fundsApproved": [
            {
              "amount": "120700.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "120700.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-478",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Smart Deploy - Smart Deploy",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Deploy, manage and verify smart contracts easily on Soroban with our Contract Management DAO. With the support of the SCF, we are excited to launch and grow Smart Deploy, a revolutionary platform built on Soroban. Our mission is to simplify the process of managing smart contracts on Soroban by addressing the current lack of standardization and efficiency in publishing, deploying, invoking, and upgrading contracts. Smart Deploy provides a comprehensive solution by introducing a DAO specifically designed for publishing contracts. Developers can easily publish their contracts on our platform, enabling seamless tracking of metadata such as versioning and source code location (e.g., GitHub repository). This ensures transparency and allows for easy reference and collaboration. Once published, contracts on Smart Deploy gain a unique and easily accessible ID, making them human-readable and facilitating efficient deployment. Our platform also offers a standardized interface for invoking deployed contracts, promoting easy integration with various applications and services. This eliminates the need for developers to spend time and effort on complex integration processes. One of the key features of Smart Deploy is its emphasis on safety and upgradability. By utilizing semantic versioning and leveraging the power of the DAO contract, developers can confidently upgrade their contracts to the latest version. Each decision regarding upgrades is made as a team, ensuring transparency and collective agreement. Smart Deploy's user-friendly interface and standardized processes streamline the entire contract deployment workflow on Soroban. By alleviating developers' concerns about technical complexities and redundant work, our platform empowers them to focus on building exceptional applications. With Smart Deploy, developers can maximize their productivity and creativity, driving innovation and growth within the ecosystem. We are confident that our platform will revolutionize the way smart contracts are managed, opening up new possibilities and opportunities for the Stellar and Soroban communities. Together, let's unlock the true potential of smart contract management and pave the way for a more efficient and thriving ecosystem.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recs6MedZFNwjZzRh",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/TenkDAO"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/WXBwmYy6uj"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/tenk-studio"
            }
          ],
          "fundsApproved": [
            {
              "amount": "79900.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "79900.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-479",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "sorosorcerer.com - Sorosorcerer.com",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Sorosorcerer makes building production ready custom smart contracts on Stellar and Soroban easy and accessible Sorosorcerer is a platform with the mission to reduce the barrier for entrepreneurs to build impactful use-cases on Soroban and Stellar Network. This is achieved through creating a wizard which guides builders through functional and business requirements to automatically create a production-ready smart contract which can be deployed on Soroban to quickly bring the idea to market.\n\nSmart contract development is too risky and resource intensive for most builders. This tweet about a talk by Tomer Weller summarizes it perfectly. A technical founder may spend hundreds of developer hours of a huge amount of resources to turn around a smart contract. Deployment is risky, and design considerations may limit scaling. Instead, we propose a standardized and scalable wizard which reduces the barrier for founders to bring a product on Stellar to market. Our intuitive front-end combined with a library of secure smart contract components merge together to create a developer experience that focuses on functional design and will save time and resources. In summary, Sorosorcerer makes building production-ready custom smart contracts on Soroban easy and accessible. Specifically, we propose to include components that will compile into three different contract types: 1) fungible asset contract (50% complete) 2) Non-fungible asset contract 3) governor contract. More will be added over time using the best in class and trusted components developed by the community or other projects such as anchain.\n\nAs our mission is to reduce the barrier for entrepreneurs to build impactful use-cases on Soroban and Stellar Network, we are building developer tooling specific for Stellar and Soroban. We will take advantage of all the interesting and unique protocol level features that differentiate Stellar's native assets (i.e. authorization required, revocable) as well as extend these features with custom contract code using Soroban (i.e. pausable). Combining the two is very powerful as for some use-cases a builder may be satisfied with a Stellar native asset and in other cases the use-case would be better suited on a Soroban custom asset contract. Sorosorcerer abstracts away these technical considerations and creates the optimal contract code based on the functional and business requirements. We also plan to investigate opportunities to integrate or load contract code into other development lifecycle tooling such as IDE's or simulated playgrounds. Examples include smartdeploy and usesoroban.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recMrJRtoPBpXYIMY",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/EfikoDLT"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/5mxkqWaX7F"
            }
          ],
          "fundsApproved": [
            {
              "amount": "40000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "40000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-480",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Soroban Learn - Soroban Learn",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Bringing developers from zero to hero in their Soroban smart contract development journey. The core product is a tool/hub for individuals to learn/master Rust and navigate to becoming confident, smart contract developers in the Soroban ecosystem. Originally, the scope was very narrow and was meant to only be an intro to Soroban development. But, after building V1 and discussions with Julian I now see this as a complete learning platform for any developer, new or experienced, to learn Rust and Soroban smart contract development in the same platform. The core new deliverables for this project are as follows: Full course development (collaboration with Julian) Wallet connection and/or email account creation to track progress Certificate of completion delivery (maybe via a NFT [TBD]) User forum for peer-to-peer support Video content to complement the courses developed A dashboard to easily manage course content (currently content is hard-coded into JSON files) Improvement on the error feedback inside the IDE.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recovwoOp8xxFpkfq",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "54000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "54000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-481",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Phoenix ($PHO) - Phoenix",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Phoenix's AMM enables decentralized swaps of crypto assets and is the first of a full suite of synergistic DeFi protocols Phoenix\u2019s AMM DEX intends to be the first of several products launched by Phoenix. The DEX will serve as a cornerstone of the Phoenix and Soroban ecosystems. Phoenix should not be thought of as \u201cjust a DEX\u201d or a singular DeFi product, rather it should be regarded as a suite of synergistic DeFi applications designed to synergize with all other Phoenix products to drive outsized value accrual.\n\nInitially, our DEX will launch with features found standard on many DEXs, such as swaps, adding liquidity, creation of xy=k pools, and allowing liquidity providers to earn rewards. We describe this initial deployment as Phoenix DEX \"Phase 1\". Having studied several DEXs, we have identified the unique needs of both liquidity providers and traders. The needs of both traders and liquidity providers are our North Star in how we approach product design. Traders desire low fees, low slippage, fast order execution, and a variety of trending and \"blue chip\" assets, while liquidity providers want sustainable yields, reduction in impermanent loss, low \u201chold up\u201d of liquidity, and certain quality of life features such as auto-compounding. Our DEX and our future suite of products will leverage Soroban\u2019s 5-second finality and 150 TPS to provide DeFi users with a seamless and high-speed experience.\n\nAs additional Phoenix products are launched in the future, the utility and features of the DEX will become richer for Phoenix users. When Phoenix Liquid Staking Derivative (LSD) assets are launched, these assets can replace the underlying base assets in a liquidity pool, which allows liquidity providers to earn more sustained yields which will help offset impermanent loss. By making Liquidity Providing more attractive, we expect higher inflows of liquidity to Phoenix, which also reduces the slippage for traders. When lending and borrowing are released, underlying LP positions (LSD based) can serve as collateral for borrowing, further increasing capital efficiency within the Phoenix ecosystem. This will also add greater utility to LP positions, which should also be accretive LP TVL. Additionally, by allowing users more access to capital we also expect an increase in trading activity and in trading fees. By offering lending and borrowing on LSD assets, collateral depositors can earn underlying compounded staking yield on top of borrowed interest.\n\nOver time Phoenix DEX will iteratively upgrade beyond Phase 1 as the products mentioned above are launched. With each product launch, Phoenix DEX and the Phoenix ecosystem will provide more utility to the Soroban ecosystem. We are submitting this application to fund the deployment of Phoenix AMM DEX Phase 1. We intend to submit future applications for LSD and Lending & Borrowing to further upgrade the Phoenix DEX to strengthen the utility of Phoenix and the Soroban ecosystem.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recLOzDpEMgJWDbTe",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/PhoenixDefiHub"
            }
          ],
          "fundsApproved": [
            {
              "amount": "150000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "150000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-482",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "EURC Soroban - Mykobo",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "EURC Soroban offers a collateral-backed EUR Stablecoin with ramps, pools & swaps to projects building on Soroban & new to Stellar MYKOBO is a Euro anchor on Stellar and the issuer of the EURC token with support for SEP-1, SEP-6, SEP-10, SEP-12, SEP-24 & SEP-31. The MYKOBO mobile app is custodial and available on Android and iOS. The tokens curated in the app are EURC, XLM, USDC & AQUA. The curated liquidity pools are XLM-EURC, EURC-USDC & AQUA-EURC. The EURC Soroban project will wrap the curated tokens currently available in the MYKOBO app and integrate these tokens into a Soroban version of the MYKOBO app with support for KYC, on/off ramps, swaps and liquidity pools. This project will deliver a full-featured Soroban-ready app powered by a Soroban-ready backend infrastructure using smart contracts. The EURC Soroban project will implement: Open source project code to serve as a template to spur the wider Stellar ecosystem as well as those new to Stellar to work on Soroban by lowering the barrier to entry. An API to enable Decentralised Applications (dApps) built on Soroban to access KYC (similar to SEP-12), on/off ramps (similar to SEP-6), collateralised tokens (EURC, USDC), other tokens (XLM, AQUA) and familiar features like liquidity pools and swaps. A cookbook with plug-and-play contracts to access the API. Instant EURC Soroban custodial account balance information. The objective of the EURC Soroban project is to provide a subset of the utility of Stellar Classic natively on Soroban. This would lead to the following benefits: Smart contract developers on other Blockchains will be motivated to build on Soroban using the EURC Soroban token. This is because the wrapped EURC Soroban token will implement the token interface on Soroban which follows the EVM's ERC-20 token standard widely used on other blockchains that support smart contracts. More dApps with utility will be built on Soroban because the EURC Soroban project code is open source and the cookbook implemented will make it easier for developers building on Soroban to adapt the project code for other use cases. The combination of fiat-backed tokens like EURC Soroban and more developers building dApps with utility will lead to an influx of EUR liquidity from other Blockchains to Stellar overall via the EURC Soroban token.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recwvs3ECinXmR2dF",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/myk0b0"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/6ByPsKGFWR"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/myk0b0"
            }
          ],
          "fundsApproved": [
            {
              "amount": "119900.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "119900.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "16-483",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 16,
          "grantPoolName": "SCF #16",
          "projectsURI": "",
          "projectName": "Airswift Supply Chain Finance Platform - Airswift",
          "createdAt": "2023-06-11T00:00:00",
          "projectDescription": "Airswift Supply Chain Finance Platform automates the full life cycle of supply chain financing process on Stellar Airswift aims to build Web3 infrastructures to connect users from the universe to metaverse. It has explored the possibility to build a Supply Chain Financing (SCF) platform on Stellar and released a preliminary product for customers. However, the smart contract and USDC were not available by then. As a result, Stellar blockchain could only play a limited role in the system. With the progress in Soroban and the growth of the ecosystem, as well as the ongoing demands from our SCF customers and partners, we decided to build a web3 native SCF platform on Soroban. The platform facilitates the decentralized financing of aspects of the real-world business operations such as trade receivables and invoices natively on-chain, creating a fully transparent market which allows creditors (lenders), suppliers (borrowers), and buyers to transact without unnecessary intermediaries. Credit is essential for economic development and business growth. Only large businesses get direct access to liquid capital markets. This same access is not available to Small and Medium-sized Enterprises (SMEs). The average cost of capital for the Global 2000 is ~1%, compared to >15% for SMEs. The lack of an open and transparent marketplace denies SMEs access to competitive borrowing rates. In our platform, suppliers are subject to a fair, but rigorous due diligence process to build trust between all the parties involved. In the medium term, suppliers on the platform will be able to reduce their cost of capital and improve payment terms by building a track record in repayments. Our business model is based on taking a fee for connecting suppliers and creditors thereby providing transaction funding, supported by dynamic risk analysis and reporting that gives visibility and transparency to all parties (Platform, Creditor, Supplier, and Buyer). The proposed platform will automate the entire process on-chain and settle the funds in USDC on Stellar, including: The Creditor confirms terms and conditions with the Buyer. A loan smart contract is initiated on-chain. The Supplier uploads the invoices to the platform. The Buyer validates and confirms the invoices. As soon as the invoices are confirmed, they will be minted as NFTs and airdropped to the Supplier's wallet. The Supplier could split each NFT into multiple NFTs which are the accounts payable (this Supplier owes to other suppliers). These NFTs received are locked in the same loan smart contract, then these suppliers receive the factored amount in USDC on Stellar. When the terms are up, the Buyer pays in USDC to all NFT holders at the face value. The USDCs are provided by the Creditor. This demo video explains how the platform works with an example: https://drive.google.com/file/d/1eNEOysY6ipZtq7lMMO_lx-uLFVnmBv-J/view?usp=share_link. With the help of Stellar blockchain and Soroban technologies, the supply chain finance payment process becomes fully automated, trackable, and traceable.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recX7oeV1IsHlgDy5",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/AirswiftTech"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/airswiftfintech/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "150000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "150000.00",
          "payoutAddress": {},
          "payouts": []
        }
      ]
    }
  ]
}