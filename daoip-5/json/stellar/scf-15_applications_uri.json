{
  "@context": "http://www.daostar.org/schemas",
  "name": "Stellar Community Fund",
  "type": "Foundation",
  "grantPools": [
    {
      "type": "GrantPool",
      "name": "SCF #15",
      "applications": [
        {
          "type": "GrantApplication",
          "id": "15-484",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "LINK Business - LINK IO",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "web3 cross border payments infrastructure for Africa Launch and Grow: LINK Business\n\nInternational and Local businesses are finding it hard to set up locally and extend their services in the Nigerian (African) market; some of the problems are: No or little access to local infrastructure, Inability to do reconciliation from local currency, Inability to hedge against rising inflation, Limited payment options to operate locally, Liquidity and settlements speed, Compliant on & off ramps are still a hassle.\n\nHow LINK Business solves this: Get NGNC straight from the source. Send and receive naira digital currency on-chain. All through a single portal for payments. On & Off Ramp (SEP 24 implementation), Treasury & Custodial Dashboard, Move NGNC from Stellar across multiple chains. Non Nigerian Businesses and Nigerian business alike small or big, defi based or traditional based now have access not only to possibilities of defi but Local infrastructures to get paid and to pay as well. We want to bridge Africa\u2019s Internet of value. LINK is that bridge between the world, defi and traditional rails built for global businesses. Facilitate on ramps from Point of sale devices to your dashboard.\n\nPlatform: Web App - https://ngnc.online\nDevelopers Doc: https://docs.ngnc.online/ngnc-bridge-docs/\n\nSEP24 is literally 90% done, Launching in other markets in Q3 Ghana, Cameroon just to mention a few, already the Ghanaian cedis asset has been issued on Stellar with payment capabilities internally, we are looking to launch it and we are onboarding more business customers that would want this kind of service utilizing Stellar's blockchain infrastructure.\n\nBuild WAVY\n\nWAVY is a stablecoin utility super app/custodial wallet for the world, think Binance and Revolut but for stablecoins. Permissionless on and off ramps leveraging anchor partnerships on the network (on the roadmap as well would be to build sort of a bridge on soroban smart contract that would allow cross chain). USDC yields from local currencies leveraging yUSDC (Panning out building a contract as well on Soroban that allows users supply and borrow). FOCUS IS BUILDING the Largest Stablecoin P2P Marketplace where users get to buy/sell stablecoins with other stablecoins at their own terms, in this case we are building our own asset escrow contract on Soroban that would hold the both stables until the both users sign through their wallets.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recIf1jFrLDhF2wvL",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/Link_IO"
            }
          ],
          "fundsApproved": [
            {
              "amount": "140000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "140000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-485",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "Beans app - Beans app",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "Beans is a super simple, free p2p payments app with healthy yield on your savings. Beans is a non-custodial payments app that targets the general public, not just the crypto community. We offer seamless Stellar-based payments and plan to expand into user-friendly smart contract access for everyone. To achieve this goal, we are launching new products and services:\n\nBeans check-out: We will extend our payment requests to web so that (Soroban) projects or webshops can integrate with Beans and use our cash (Moneygram) and bank on/offramps. At check-out, a project or webshop generates a \"Pay with Beans\" QR code through our public API. They can set the amount, currency, destination address, webhook callback, and optional memo. A Beans user scans the QR and pays with their preferred currency. Via webhooks, the project will know the payment has completed, offering an experience just like any other web 2 check-out!\n\nUser-friendly deposits: We have seen that users find external webviews scary. This is why we are looking to offer in-app KYC and deposits through SEP 6 and 12.\n\nBeans for Bitcoin: Users will be able to deposit and withdraw native Bitcoin through an integration with Coinqvest BTC (SEP 6). This will allow users from the (large) Bitcoin community to use Beans as a Bitcoin payments app, buy BTC with cash, as well as \"upgrade\" their native Bitcoin to one that interoperates with Soroban smart contracts.\n\nSend to phone numbers: By building on SEP 30, a user can send a payment that can be claimed by a new user during sign-up in a non-custodial way.\n\nIntegrate smart contracts: By integrating Soroban, we will be able to offer many new services. The first use-case we will integrate is recurring payments, which our users will be able to set up from within the app. To realize this, we will need to integrate with a .NET Soroban SDK. Currently, the elucidsoft SDK is implementing Soroban, but they said they're short on time. So we will research how to help contribute to this SDK and take the first steps towards a Soroban integration in Beans.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recoZCxDJu6l9Sy9S",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/BeansApp"
            },
            {
              "platform": "Discord",
              "url": "https://beansapp.medium.com/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "96640.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "96640.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-486",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "Reflector - Reflector",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "Decentralized price feed oracle grid for Stellar DeFi smart contracts to support derivatives, lending, and asset management Reflector is a decentralized price feed oracle network for Stellar DeFi smart contracts. Price provider feed is managed by a network of trusted nodes controlled by reputable organizations. Each of them continuously monitors Stellar network for new trades to determine fair prices for every tracked asset. The account which controls oracle price feed contract is protected by M-of-N multisig, so any price update or contract code modification requires a confirmation from the majority of the participating organizations. Nodes periodically generate transactions to update the price feed contract internal state with new prices. Those transactions get broadcasted to other peer nodes to aggregate signatures. Since all servers run the same codebase and take snapshots at predefined timeframes, the generated update transaction should be always identical for all servers, unless they are lagging significantly behind the consensus. Once the transaction gathers enough signatures to match the threshold, it is submitted to Stellar network. Consequently, fresh price data becomes available to all consumers. Consumer contracts can fetch price data for any asset tracked by the oracle following the recently proposed oracle interface SEP. Aside from standard methods that allow retrieving price only designated in a base asset, we also provide automatic cross-price calculation for any pair formed by two arbitrary assets quoted by the oracle and automatic TWAP over the requested range. We focus on trust, relying on proof-of-authority consensus instead of widely used proof-of-stake. Utilization of the built-in Stellar multisig mechanism leverages the time-proven security of the mainnet instead of some in-house brewed consensus mechanism. Storing the data in the oracle contract provides many advantages compared to other architecture based on request-response model: immediate data availability in consumer contracts, low fees, straightforward invocation, efficient ledger utilization.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recWtqpdZ2UzVkfhe",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://x.com/in_reflector"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/v2ggfDty2d"
            }
          ],
          "fundsApproved": [
            {
              "amount": "148840.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "148840.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-487",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "Chainlink Oracles Relayer - Chainlink Oracles Relayer",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "Trustless Proxy Solution for Chainlink Oracle data on Stellar Oracles (Random Numbers are just one case, but the most important ones) are needed for any kind of project using NFTs. If you don\u2019t have that, you won\u2019t be able to launch an NFT drop or find out who should get what NFT from a collection. It is necessary for nearly every game that wants to prove randomness in its internal processes. VRF stands for Verifiable Random Function. It is used to provide genuinely random data for a smart contract because this kind of data is not available in smart-contracts themselves. Our trustless VRF proxy solution relays this service to a not yet supported blockchain and also provides a way to verify the correctness of the randomness provided. For this purpose, we provide a way to integrate the bluechip oracle provider \"Chainlink'' into your own network in a trustless way. If desired, we can also connect another oracle provider instead of Chainlink. Developers can make use of it for their own needs (Raffles, pick NFTs details on reveal, Lottery services, Battles with randomness (e.g. effect of an attack), etc.). A dapp developer has to implement the interface of the Chainlink Oracle proxy contract. Which means calling a function in the proxy contract and providing a callback function.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recHahmCLtNhZaCUg",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/relinkservices"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/create3-labs"
            }
          ],
          "fundsApproved": [
            {
              "amount": "38400.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "38400.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-488",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "Elio DAO - Elio DAO",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "Elio is a DAO infrastructure protocol to create and manage funds, communities and other decentralized organizations. Decentralized Autonomous Organizations (DAOs) represent a paradigm shift in the way organizations are managed, leveraging blockchain technology to enable decentralized decision-making, community governance, and shared ownership. DAOs operate through smart contracts, automating transactions and organizational processes, thus minimizing the need for centralized authorities. Elio DAO is a unique protocol as it provides the core functionality of a DAO builder in a beautiful no-coder-friendly interface, including but not limited to Creation of DAO alongside with Metadata Management Token Issuance, Initial Governance and Council Management A full Proposal / Voting Workflow with Onchain Governance. The entire flow is ready to review in wireframes and designs in this document. Please review it for a full overview of the providing functionality and user interfaces. The twist for Elio DAO, though, is its extendable hook point functionality, where all protocol contracts allow developers to provide extensions in the form of Soroban smart contracts that are called from within the lifecycle of the protocol. This enables a plugin-like system that people already know from web2 apps like wordpress and shopify. Elio DAO is not only a protocol, but an ecosystem, that can be extended easily and has composition as a first class citizen of its protocol. Developers (and ourselves) can customize DAOs to legal needs or community requirements without any limits. We have specified the technical functionality and how we are going to use Soroban to do this in this document within the section \"How we use Soroban\". As Elio DAO is not a DAO itself, it will not have a token or governance model. Instead, it will provide an open-source infrastructure and frontend components for others to use and adapt to their specific needs.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recAn7u7cJ9KA3AEd",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/ElioDAO_org"
            }
          ],
          "fundsApproved": [
            {
              "amount": "148200.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "148200.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-489",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "Soroban Smart Option Contract (Part 2) - Soroban Smart Option Contract",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "An expansion of our Option Contract from SCF #13 we are expanding to option spreads and a bi-lateral trade submission scheme Block Time Financial is a complete middle and back-office blockchain infrastructure software company. We provide the ability to issue Stellar assets, make payments, trading, swapping, and more, all done with regulatory audit and compliance issues in mind. We track all the 5 \"Ws\" for blockchain operations, Who, What, Where, When, and Why, so that there is a clear and immutable record of business functions. We specialize in the Stellar blockchain and take full advantage of many of the features, including claimable balances, mass payments, authorizations, path payments, and specialty entity identity tokens such as KYC, AML, ACRED, QUAL, and more. We are fully involved in implementing Soroban into our platform so that our users have a complete environment for building, installing, and utilizing Soroban Smart Contracts. We have a contract management system module that keeps track of all versions of Smart Contracts, both installed by our platform and contracts that have been deployed on the network. We're planning on a fee usage module that helps predict fees and charges for smart contract usage. We also have incorporated the smart contract issuers and their roles into our UserProfile. Our current project, the Smart Option Contract, is a prototype for a bilateral trade submission with collateral. The prototype is currently limited to a \"European equity put option.\" With the additional grant money, we hope to expand this to option spreads and explore the use of adjusting collateral by use of other projects in the ecosphere. We have engaged multiple option traders for input and hope to demonstrate the end product to multiple exchanges with our existing contact network. All these things will be necessary for a business to be able to build, deploy and use smart contracts in a regulatory and compliant manner. Case in point, Franklin Templeton, one of the world's largest investment managers, built software in-house to issue a regulatory-compliant money market fund on Stellar. Our platform will allow other investment managers the same opportunity without having to build software.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recm80YHqumL7qKsJ",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://github.com/blocktimefinancial/option"
            },
            {
              "platform": "Discord",
              "url": "https://discord.com/channels/1039603107396603965/1039603108034129922"
            }
          ],
          "fundsApproved": [
            {
              "amount": "51500.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "51500.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-490",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "AnChain.AI - Tenzing Smart Contract Catalog - AnChain.AI",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "The Tenzing Catalog is an open-source catalog of audited smart contracts designed to help companies build web3 projects faster. This grant proposal is related to an open-source Soroban Smart Contract Catalog for the Stellar blockchain. The catalog will be a standalone and free tool. It will contain a list of audited Soroban smart contracts for different use cases (ex. NFTs, SBTs, DeFi, GameFi), which companies and developers can use or refer to to create their web3 application on Stellar. Today, the coding and auditing of smart contracts is still one of the major barriers to entry for companies and developers to launch any blockchain application. It shouldn't be that way. Our goal with this project is to provide templates of functional and secure smart contracts that can (1) be used as-is for deployment, (2) modified to fit specific needs, or (3) simply consumed for educational purposes. We realize that the state of the Soroban platform is still in the early stages and we want to contribute to its testing and development for the ecosystem. Down the line, we plan to also have integrations with our new Tenzing product, a smart contract management product designed to help companies and small teams of developers build web3 projects, deploy smart contracts on the blockchain, and manage the interactions with them. The video demo uploaded below showcases these future functionalities as well, but this project proposal is specifically related to the Smart Contract Catalog portion of Tenzing.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/rec8A43DCXVKh78FI",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/AnChainAI"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/anchainai/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "95000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "95000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-491",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "useSoroban.app II - Okashi",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "A fully-featured Soroban contract development environment to onboard and keep web developers building on Soroban. The first stage was to prove that I can build a playground experience that lets people enjoy building and interacting with Soroban smart contracts, all with zero setup and latency. The second stage will yield a fully-featured online development environment for Soroban and the tools to keep people building and engaged with the community. Software development is so much more delightful when you can build, share, and explore what other people are building. This next iteration of useSoroban dot app will focus on exactly that. We'll start by implementing a robust user system that will finally support a free tier for all to enjoy. Next, you will be able to persist your contract storage between sessions and users. This will enable long-lived experiences that mimic what a testnet provides with no latency or onboarding churn. With user/developer profiles and activity widgets you'll be able to see what contracts people are playing with and learn about other developers and their techniques. Then, because user testing is never enough, useSoroban dot app will add an integrated test environment for your Soroban smart contracts with an intuitive interface right in your browser. Finally, every development environment requires awesome built-in onboarding and education, and that will be the cherry on top for web developers getting started with Soroban. After we complete the 2nd stage of useSoroban dot app development, Soroban will have the most magical developer environment in the market.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recdmXC3u5HWsR7tq",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/Okashidev"
            }
          ],
          "fundsApproved": [
            {
              "amount": "124800.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "124800.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-492",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "Pluto Loans B2B - Pluto Loans B2B",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "Pluto Loans allows users to spend their future yield today. The loan is automatically repaid over time using the profits generated With Pluto Loans, users can deposit yield-producing collateral and get a loan of their future yield immediately. No liquidation risks. The loan debt is time-based and self-repaying. Now we are working in a new business model, PlutoLoans B2B. Soroban will augment PlutoLoans functionality by allowing: 1) Loan closure after it has been self-paid without user intervention 2) Protect the users' collateral capital in case of yUSDC loss of value by trading the collateral amount in the loan vault for a stable coin.\n\nArgentina has an inflation rate of over 102.5% (https://tradingeconomics.com/argentina/inflation-cpi). The Argentinian peso has devalued 3,609% since 2012 (https://www.xe.com/currencycharts/?from=USD&to=ARS&view=10Y). Argentina has a ban on purchasing foreign currency, but not on cryptocurrencies (https://www.washingtonpost.com/politics/2019/09/06/argentina-just-reinstated-foreign-currency-restrictions-heres-what-you-need-know/). Personal loans in Argentinian pesos have an interest rate of over 101% (https://www.bbva.com.ar/tablas/tasaprestpers.pdf).\n\nPluto is LATAM-focused, with most of its core team members being based in Argentina, and with Argentina being its main country of operation. Users can make use of regional anchors to buy ARS issued on the Stellar network (https://home.anclap.com/, https://anchors.stablex.org/) or use exchanges to buy XLM. Users deposit yUSDC and get a loan of 50% of their collateral loaned out in pUSD. pUSD is a token backed by the future yield generated by yUSDC, intended to trade 1:1 with yUSDC through various pegging mechanisms (https://ultrastellar.com/assets/yusdc). Self-repaying; a loan gets paid by the yield generated by the collateral of yUSDC. At the maturity of the loan, a user gets back their collateral and keeps their loan. No risk of liquidation. No early cancellation fees. Build on top of other Stellar projects (Ultrastellar\u2019s yUSDC), strengthening the ecosystem.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recVYQzThUCdFa0N5",
          "status": "funded",
          "socials": [
            {
              "platform": "Discord",
              "url": "https://discord.gg/9hkx2AVhpc"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/plutodao/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "92700.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "92700.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-493",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "Trilobyte - Trilobyte",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "A Cash Flow Financing Protocol on Soroban Trilobyte is an uncollateralised lending protocol on Soroban, the Stellar Development Foundation\u2019s new native smart contracts platform. The focus of Trilobyte will be on facilitating trade, working capital, and other cash flow finance transactions (Cash Flow Financing) for Latin America and the Caribbean (LATAM+C). These loans are expected to be executed between parties experiencing difficulties contracting the finance they wish to contract for reasons relating to trust, shortcomings of the financial markets they operate in, local currency convertibility issues, geographic bias, or global regulation limiting their activity, among others. Trilobyte will provide the necessary infrastructure to connect whitelisted borrowers with investors, allowing the former to borrow digital assets against expected future cash flows, as a simpler and more cost-effective alternative to what is available in local or international financial markets.\n\nTrilobyte\u2019s ecosystem will consist of five key entities:\n\n- Borrowers: Reputable organisations searching for working capital to finance their operations.\n- Borrower\u2019s Vault: The equivalent to a loan in traditional finance, the Vault is a special-purpose receptacle for receiving the agreed cash flows. It is represented by a smart contract on the Stellar Soroban platform. Vaults can be permissioned or permissionless.\n- The Payment Actors: Payment Actors are third-party vehicles through which the cash flows that serve as the source of repayment are channelled in a Cash Flow Financing lending scheme. Payment Actors can be independent persons or entities who regularly pay funds to the Borrower in the normal course of the Borrower\u2019s business activities. These are generally the clients or customers of the Borrower\u2019s business or other parties, such as management entities or electronic payment platforms, who owe regular payments to the Borrower in the normal course. These regular payments constitute the cash flows that can be captured in a cash flow finance scheme by directing the Payment Actors to make all future payments to the Vault for subsequent redistribution between the Investors and the Borrower in accordance with the agreed terms of the transaction.\n- The Investors: Private individuals or entities who will transfer digital assets into one or multiple Borrower Vaults in exchange for future yields.\n- The Treasury: Initially managed by the Trilobyte team, the Treasury will whitelist Borrowers, create Vaults, and ensure that Payment Actors meet their agreed payment obligations. A DAO is expected to manage the Treasury in the future as the project scales.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recq35w2zW5FQu4tY",
          "status": "funded",
          "socials": [],
          "fundsApproved": [
            {
              "amount": "119000.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "119000.00",
          "payoutAddress": {},
          "payouts": []
        },
        {
          "type": "GrantApplication",
          "id": "15-494",
          "grantPoolsURI": "https://raw.githubusercontent.com/opensource-observer/oss-funding/refs/heads/main/daoip-5/json/stellar/GrantsPool.json",
          "grantPoolId": 15,
          "grantPoolName": "SCF #15",
          "projectsURI": "",
          "projectName": "Soroswap Protocol - Soroswap.Finance",
          "createdAt": "2023-05-14T00:00:00",
          "projectDescription": "Open-source AMM protocol for providing liquidity and trading Stellar Assets in Soroban. With SDK and easy to use frontend. The Soroswap Protocol is planning to launch the protocol itself (smart contracts in rust) and its ReactJS frontend. In order to do this, Soroswap will support and develop the @soroban-react library, which allows to connect frontend with smart contracts. All products will be 100% open-source.\n\n1) Smart contracts. Provide the ability for users to swap their tokens inside Soroban, as well as for developers to connect their Soroban dApps with the protocol. Written in Rust, inspired by UniswapV2. Include:\n- Factory contract: Creates one Liquidity Pool Token contract per unique token pair.\n- Pair contract (Liquidity Pool Token contract): They serve as automated market makers (AMM) and keep track of pool token balances. These contracts will implement the token interface.\n- Router contract: Supports the basic requirements of a front-end offering trading and liquidity management functionality. Supports multi-pair trades (e.g. x to y to z).\n\n2) The Soroswap front-end: Convenient and user-friendly front-end written in ReactJS and inspired from the famous Uniswap UI. Uses the @soroban-react library in order to connect the protocol with Stellar wallets. Smart contract and front-end audience: any user wanting to swap a token (or provide liquidity) inside Soroban, without needing to use the classic Stellar chain\u2019s AMM, or because they are using a token that was issued inside Soroban and cannot be \u201cunwrapped\u201d to the classic chain. It is also useful for other protocols that need to swap tokens (e.g., a multi-currency NFT marketplace, where the seller wants a certain amount in a certain coin and the buyer can buy with any currency available in the Soroswap protocol).\n\n3) The @soroban-react library: Framework for building modern Soroban dApps using ReactJS. Its development will keep the library updated with the latest versions of Stellar\u2019s libraries and previews. Soroswap will add support for other wallets and write documentation. Library Audience: Any developer building a web-dapp in Soroban.",
          "contentURI": "https://communityfund.stellar.org/dashboard/submissions/recQcIB562ZHDFqdJ",
          "status": "funded",
          "socials": [
            {
              "platform": "Twitter",
              "url": "https://twitter.com/soroswap"
            },
            {
              "platform": "Discord",
              "url": "https://discord.gg/JdTz2Tbd"
            },
            {
              "platform": "LinkedIn",
              "url": "https://www.linkedin.com/company/soroswap/"
            }
          ],
          "fundsApproved": [
            {
              "amount": "57600.00",
              "denomination": "USD"
            }
          ],
          "fundsApprovedInUSD": "57600.00",
          "payoutAddress": {},
          "payouts": []
        }
      ]
    }
  ]
}